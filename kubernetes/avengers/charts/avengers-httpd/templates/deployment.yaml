apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "avengers-httpd.fullname" . }}
  namespace: "lowtrust"
  labels:
    {{- include "avengers-httpd.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "avengers-httpd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      namespace: "lowtrust"
      labels:
        {{- include "avengers-httpd.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "avengers-httpd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: httpd-tmp
          emptyDir: {}
        - name: httpd-logs
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: httpd-tmp
              mountPath: /tmp
            - name: httpd-logs
              mountPath: /usr/local/apache2/logs
          ports:
            - name: http
              containerPort: {{ .Values.global.httpd.applicationPort }}
              protocol: TCP
          env:
            - name: APP_PROTOCOL
              value: "{{ .Values.proxy.app.protocol }}"
            - name: APP_HOST
              value: "{{ .Values.proxy.app.host }}"
            - name: APP_PORT
              value: "{{ .Values.proxy.app.port }}"
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.global.httpd.applicationPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.global.httpd.applicationPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
